Usage: mochify [options] [entry ...]

Uses Headless Chrome unless --wd or --node is specified.
Defaults "entry" to "./test/*.js".

  Options:
           -w, --watch  Use watchify to watch your files and run the tests on
                        change.

        -R, --reporter  Change the Mocha reporter. Mocha reporters known to
                        work: doc, dot, json, landing, list, markdown, min,
                        spec, tap, xunit, nyan

                --grep  Set Mocha grep option.

              --invert  Set Mocha grep invert flag.

           --recursive  Include sub directories.

              -U, --ui  Change the Mocha UI. Defaults to 'bdd'.

         -t, --timeout  Change the Mocha timeout. Defaults to 2000.

              --colors  Explicitly enables Mocha color output.

           --no-colors  Explicitly disables Mocha color output.

         -o, --outfile  Write test output to this file. If unspecified,
                        mochify prints to stdout.

         -r, --require  Require the given module.

               --debug  Launches a non-headless chromium instance with
                        developer tools.

              --chrome  Use a Chrome binary. If not specified, the built-in
                        chromium is used.

   --ignore-ssl-errors  Tells Chrome whether or not to ignore ssl certificate
                        issues (default is false)

--allow-chrome-as-root  allows Chrome to run as root

              --dumpio  passed to puppeteer to dump all IO

        --https-server  Launches an HTTPS server using the specified port at
                        https://localhost:${port}

      --viewport-width  Tells Chrome to use the given width for its viewport.

     --viewport-height  Tells Chrome to use the given height for its viewport.

               --cover  Check code coverage with coverify.

                --node  Creates a bare bundle and run test cases on node.

                  --wd  Use min-webdriver to run the tests in multiple real
                        browsers.

             --wd-file  specify the location of the .min-wd config file.
                        (only with `--wd`)

                 --url  runs the tests in the context of the given URL.

           --consolify  Generate a standalone HTML page.

              --bundle  Specify a separate JS file export when using
                        --consolify

           --transform  Specifies a Browserify transform to add. Can be
                        specified multiple times. Options can be passed with
                        subargs.

    --global-transform  Specifies a Browserify transform to add globally. Can
                        be specified multiple times. Options can be passed
                        with subargs.

              --plugin  Specifies a Browserify plugin to add. Can be specified
                        multiple times. Options can be passed with subargs.

           --extension  Search for files with the extension in "require"
                        statements. For example, "--extension .coffee". Can be
                        specified multiple times.

    --no-browser-field  Turn off package.json browser field resolution. This
                        is also handy if you need to run a bundle in node.

        --no-commondir  Preserve original paths.

            --external  Mark given path or module as external resource and
                        prevent from being loaded into the bundle.

          -y, --yields  Changes the yield interval to allow pending I/O to
                        happen.

         -v, --version  Print mochify version and exit.

            -h, --help  Show this message and exit.

       --async-polling  If false, async polling will be disabled
                        (use when running in Appium). Defaults to true.

          --mocha-path  Path to custom Mocha module
